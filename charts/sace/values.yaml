# Default values for sace.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/edneyego/sace
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8082

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sace-web.apps-crc.testing
      paths:
        - path: /sace-web
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pvc:
  # className: ''
  size: 100Mi

# Array of objects
configs:
  - name: branco
    title: Bacia do Branco
    enabled: true
    # Mandar gerar a partir de ingress
    url: http://sace-web.apps-crc.testing/sace-web
    imageDir: /mnt/sace/data
    bounds:
      minX: -65
      minY: -2
      maxX: -59
      maxY: 6
    enableScheduling: false
    enableRetrieve: false
    jvm:
      xmx: 3096
      xms: 2098
    db:
      url: jdbc:postgresql://postgresdb:5432/sace
      user: postgres
      pass: postgres
    geoserver:
      workspace: BRANCO
      url: https://sace.sgb.gov.br/geoserver
    overrideValues: {}

# Dependencies
nginx:
  ingress:
    enabled: true
    annotations: {}
    hosts:
      - host: sace.apps-crc.testing
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: nginx-unprivileged-tls
    #    hosts:
    #      - nginx-unprivileged.apps-crc.testing
  overrides:
    conf_d:
      default: |-
        {{- $nginx := (include "nginx.fullname" .) -}}

        server {
            listen       {{ .Values.service.port }};
            server_name  {{ (mustFirst .Values.ingress.hosts).host }} {{ $nginx }}.{{ .Release.Namespace }}.svc.cluster.local {{ $nginx }};

            #access_log  /var/log/nginx/host.access.log  main;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html { 
                root   /usr/share/nginx/html;
            }

            {{- range .Values.selectedConfigs }}

            location /{{ . }}/ {
                proxy_pass http://{{ (replace "nginx" . $nginx) }}.{{ $.Release.Namespace }}.svc.cluster.local:8082/{{ . }}/;
                proxy_redirect off;

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location = /{{ . }} {
                return 301 $scheme://$host/{{ . }}/;
            }

            {{- end }}
          }
  selectedConfigs:
    - branco

geoserver: 
  enabled: false

postgresql: 
  enabled: false
  image:
    tag: 14.11.0

global:
  postgresql:
    postgresqlPassword: postgres